{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst date = document.querySelector('#datetime-picker');\nconst btn = document.querySelector('[data-start]');\nconst day = document.querySelector('[data-days]');\nconst hour = document.querySelector('[data-hours]');\nconst min = document.querySelector('[data-minutes]');\nconst sec = document.querySelector('[data-seconds]');\nconst spans = document.querySelectorAll('.value');\n\nlet timerId = null;\n\nbtn.disabled = true;\n\nflatpickr(date, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= Date.now()) {\n      iziToast.show({\n        message: 'Please choose a date in the future'\n    });\n      btn.disabled = true;\n    } else {\n      btn.disabled = false;\n\n      \n    }\n  },\n});\n\nbtn.addEventListener('click', onBtnStartClick);\n\nfunction onBtnStartClick() {\n  spans.forEach(item => item.classList.toggle('end'));\n  btn.disabled = true;\n  date.disabled = true;\n  timerId = setInterval(() => {\n    const choosenDate = new Date(date.value);\n    const timeToFinish = choosenDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(timeToFinish);\n\n    day.textContent = addLeadingZero(days);\n    hour.textContent = addLeadingZero(hours);\n    min.textContent = addLeadingZero(minutes);\n    sec.textContent = addLeadingZero(seconds);\n\n    if (timeToFinish < 1000) {\n      spans.forEach(item => item.classList.toggle('end'));\n      clearInterval(timerId);\n      date.disabled = false;\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return `${value}`.padStart(2, '0');\n}"],"names":["date","btn","day","hour","min","sec","spans","timerId","flatpickr","selectedDates","iziToast","onBtnStartClick","item","timeToFinish","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"0IAQA,MAAMA,EAAO,SAAS,cAAc,kBAAkB,EAChDC,EAAM,SAAS,cAAc,cAAc,EAC3CC,EAAM,SAAS,cAAc,aAAa,EAC1CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAM,SAAS,cAAc,gBAAgB,EAC7CC,EAAM,SAAS,cAAc,gBAAgB,EAC7CC,EAAQ,SAAS,iBAAiB,QAAQ,EAEhD,IAAIC,EAAU,KAEdN,EAAI,SAAW,GAEfO,EAAUR,EAAM,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQS,EAAe,CACjBA,EAAc,IAAM,KAAK,IAAG,GAC9BC,EAAS,KAAK,CACZ,QAAS,oCACjB,CAAK,EACCT,EAAI,SAAW,IAEfA,EAAI,SAAW,EAIlB,CACH,CAAC,EAEDA,EAAI,iBAAiB,QAASU,CAAe,EAE7C,SAASA,GAAkB,CACzBL,EAAM,QAAQM,GAAQA,EAAK,UAAU,OAAO,KAAK,CAAC,EAClDX,EAAI,SAAW,GACfD,EAAK,SAAW,GAChBO,EAAU,YAAY,IAAM,CAE1B,MAAMM,EADc,IAAI,KAAKb,EAAK,KAAK,EACJ,KAAK,IAAG,EACrC,CAAE,KAAAc,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAY,EAEhEX,EAAI,YAAciB,EAAeL,CAAI,EACrCX,EAAK,YAAcgB,EAAeJ,CAAK,EACvCX,EAAI,YAAce,EAAeH,CAAO,EACxCX,EAAI,YAAcc,EAAeF,CAAO,EAEpCJ,EAAe,MACjBP,EAAM,QAAQM,GAAQA,EAAK,UAAU,OAAO,KAAK,CAAC,EAClD,cAAcL,CAAO,EACrBP,EAAK,SAAW,GAEnB,EAAE,GAAI,CACT,CAEA,SAASkB,EAAUE,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,MAAO,GAAGA,IAAQ,SAAS,EAAG,GAAG,CACnC"}